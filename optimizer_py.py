# -*- coding: utf-8 -*-
"""optimizer.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dpeyEKz2rP33mD_xJJZB3NeOd2_Y-5JH
"""





!pip install pygad pandas numpy

# optimizer.py
import pandas as pd
import numpy as np
import pygad

def load_data(file_path):
    df = pd.read_csv(file_path)
    return df

def fitness_func(solution, solution_idx, ga_instance):
    ore = ga_instance.ore
    waste = ga_instance.waste
    haul = ga_instance.haul

    total_ore = np.sum(solution * ore)
    total_waste = np.sum(solution * waste)
    total_haul = np.sum(solution * haul)

    fitness = total_ore - 0.4 * total_waste - 0.2 * total_haul
    return fitness

def run_ga(df):
    ore = df['OreTonnes'].to_numpy()
    waste = df['WasteTonnes'].to_numpy()
    haul = df['Haul_Distance'].to_numpy()
    num_genes = len(df)

    def fitness_wrapper(solution, solution_idx, ga_instance):
        ga_instance.ore = ore
        ga_instance.waste = waste
        ga_instance.haul = haul
        return fitness_func(solution, solution_idx, ga_instance)

    ga_instance = pygad.GA(
        num_generations=50,
        num_parents_mating=10,
        fitness_func=fitness_wrapper,
        sol_per_pop=20,
        num_genes=num_genes,
        init_range_low=0,
        init_range_high=1,
        gene_type=int,
        mutation_percent_genes=5,
        crossover_type="single_point",
        mutation_type="random",
        parent_selection_type="sss",
        keep_parents=2
    )

    ga_instance.run()
    return ga_instance

